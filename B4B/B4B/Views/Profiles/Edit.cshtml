@using B4B.Models;
@model WizardViewModel
@{
    ViewBag.Title = "Edit";
}

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        @using (Html.BeginForm("Edit", "Profiles", FormMethod.Post, new { enctype = "multipart/form-data", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model._profile.ProfileID)

            <div class="container">
                <div class="row">
                    <div class="col-lg-12 thumbnail" style="height:355px; margin-right: 16px;">
                        <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                            <div class="form-group col-sm-12">
                                <div>
                                    <img src="~/File?id=@Model._profile.ProfileID" alt="avatar" class="idpicsize img-responsive" />
                                    <input type="file" class="filestyle" data-iconName="fa fa-camera" data-input="false" id="AvatarEdit" data-buttonText="" name="upload" />
                                    <button class="btn btn-primary" type="button" id="generateQr" onclick="printpage()">Print Qr Code</button>
                                </div>
                            </div> <!-- end Current Avatar -->
                        </div>
                        <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12" style="padding-top: 15px;">
                            <div class="form-group clearfix" style="display:block">
                                <div class="col-sm-4">
                                    @Html.EditorFor(model => model._profile.FirstName, new { htmlAttributes = new { @class = "form-control", style = "max-width: 350px", @placeholder = "First Name*" } })
                                    @Html.ValidationMessageFor(model => model._profile.FirstName, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4">
                                    @Html.EditorFor(model => model._profile.LastName, new { htmlAttributes = new { @class = "form-control", style = "max-width: 350px", @placeholder = "Last Name" } })
                                    @Html.ValidationMessageFor(model => model._profile.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div> <!-- end First Name & Last Name -->

                            <div class="form-group clearfix" style="display:block">
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => model._profile.StreetAdress, new { htmlAttributes = new { @class = "form-control", style = "max-width: 550px;", @placeholder = "Street Address" } })
                                    @Html.ValidationMessageFor(model => model._profile.StreetAdress, "", new { @class = "text-danger" })
                                </div>
                            </div> <!-- end Street Address -->

                            <div class="form-group editcity clearfix" style="display:block">
                                <div class="col-sm-4">
                                    @Html.EditorFor(model => model._profile.City, new { htmlAttributes = new { @class = "form-control", @placeholder = "City" } })
                                    @Html.ValidationMessageFor(model => model._profile.City, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-2">
                                    @Html.EditorFor(model => model._profile.State, new { htmlAttributes = new { @class = "form-control", @placeholder = "State" } })
                                    @Html.ValidationMessageFor(model => model._profile.State, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-2">
                                    @Html.EditorFor(model => model._profile.ZipCode, new { htmlAttributes = new { @class = "form-control", style = "max-width: 140px;", @placeholder = "Zip Code" } })
                                    @Html.ValidationMessageFor(model => model._profile.ZipCode, "", new { @class = "text-danger" })
                                </div>
                            </div> <!-- end City -->

                            <div class="emergencyContacts">
                                <p>Emergency contacnt header or title or something here maybe</p>
                            </div>

                            <div class="form-group clearfix" style="display:block">
                                <div class="col-sm-4">
                                    @Html.EditorFor(model => model._profile.EcontactName, new { htmlAttributes = new { @class = "form-control", style = "max-width: 400px;", @placeholder = "Emergency Conatact" } })
                                    @Html.ValidationMessageFor(model => model._profile.EcontactName, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4">
                                    @Html.EditorFor(model => model._profile.EmergencyPhone, new { htmlAttributes = new { @class = "form-control", style = "max-width: 400px;", @placeholder = "Emergency Contact Phone" } })
                                    @Html.ValidationMessageFor(model => model._profile.EmergencyPhone, "", new { @class = "text-danger" })
                                </div>
                            </div> <!--end Emergency Contact Name & Emergency Contact Phone -->

                            <div class="form-group clearfix" style="display:block">
                                <div class="col-sm-4">
                                    @Html.EditorFor(model => model._profile.SecondEcontactName, new { htmlAttributes = new { @class = "form-control", style = "max-width: 400px;", @placeholder = "Emergency Conatact" } })
                                    @Html.ValidationMessageFor(model => model._profile.SecondEcontactName, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4">
                                    @Html.EditorFor(model => model._profile.SecondEmergencyPhone, new { htmlAttributes = new { @class = "form-control", style = "max-width: 400px;", @placeholder = "Emergency Contact Phone" } })
                                    @Html.ValidationMessageFor(model => model._profile.SecondEmergencyPhone, "", new { @class = "text-danger" })
                                </div>
                            </div> <!--end Second Emergency Contact Name & Second Emergency Contact Phone -->
                        </div>
                    </div>
                </div>
                
                <div class="row" id="Medical">
                    @for (int i = 0; i < Model.medInfoList.Count(); i++)
                    {
                        @Html.HiddenFor(model => model.medInfoList[i].MedicalInfoID)
                        @Html.HiddenFor(model => model.medInfoList[i].ProfileID)
                        <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12" style="padding-left: 0; margin-top: 15px;">
                            <div class="thumbnail" style="height: 300px;">
                                <div class="form-group clearfix" style="display:block">
                                    <div class="col-sm-12" style="margin: 10px 0;">
                                        <h5 style="color: black;">Medical Conditions:</h5>
                                        @Html.EditorFor(model => model.medInfoList[i].MedicalCondition, new { htmlAttributes = new { @class = "form-control", style = "max-width: 400px;" } })
                                        @Html.ValidationMessageFor(model => model.medInfoList[i].MedicalCondition, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-sm-12">
                                        <h5 style="color: black;">Symptoms:</h5>
                                        @Html.EditorFor(model => model.medInfoList[i].Symptoms, new { htmlAttributes = new { @class = "form-control", style = "max-width: 400px;" } })
                                        @Html.ValidationMessageFor(model => model.medInfoList[i].Symptoms, "", new { @class = "text-danger" })
                                    </div>

                                </div> <!-- end Medical Condition  & Symptoms -->


                                <div class="form-group clearfix" id="relatedInfo">
                                    <div class="col-lg-12 col-md-12 col-sm-12" style="margin:0 auto; text-align:center;">
                                        <h5 style="color: black;">Related Information:</h5>
                                        @Html.TextAreaFor(model => model.medInfoList[i].RelatedInformation, 4, 35, new { htmlAttributes = new { @class = "form-control", style = "max-width: 840px;" } })
                                        @Html.ValidationMessageFor(model => model.medInfoList[i].RelatedInformation, "", new { @class = "text-danger" })
                                    </div>
                                </div> <!-- Related Information -->
                            </div>

                        </div>
                    }

                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12" style="padding-left: 0; margin-top: 15px;">
                        <div class="thumbnail" id="addNewMedThumb" onclick="addNewMedCard()" style="height: 300px;">
                            <div class="row">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    <h3 class="addNewMedCard">Add A New Medical Card</h3>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>
                <input type="submit" value="Save" class="btn btn-default" style="margin-top: 28px; display: inline-block;" />
                <a class="btn btn-danger" style="margin-top: 28px; display:inline-block" role="button" href="@Url.Action("Delete", "Profiles",  new { id = Model._profile.ProfileID })">Delete</a>
                <a class="btn btn-danger" style="float: left; margin-top: 28px; display:inline-block" role="button" href="@Url.Action("Admin", "Home")">Cancle</a>
            </div>

        }


    </div>
</div>
<div class="qrCodeTester pull-right target" id="target" style="visibility: hidden;">
    <img src="@Url.Action("myAction", "Profiles", new { id = Model._profile.ProfileID })" alt="qr code" id="testQrCode" />
</div>
@*<div class="col-sm-8">
        <div class="form-group clearfix" style="display:block">
            <div class="form-group col-sm-4 clearfix generateQr" style="display:block">
                <button class="btn btn-primary" id="generateQr" onclick="displayQr()">Generate Qr Code</button>
            </div>

            <div class="form-group col-sm-4 clearfix printQr" style="display:block">
                <button class="btn btn-primary" id="generateQr" onclick="printpage()">Print Qr Code</button>
            </div>
            <div class="qrCodeTester pull-right target" id="target">
                <img src="@Url.Action("myAction", "Profiles", new { id = Model._profile.ProfileID })" alt="qr code" id="testQrCode" />
            </div>
        </div>
    </div>*@
<div>
</div>

<script type="text/javascript">
    hide(document.querySelectorAll('.target'));

    function hide(elements) {
        elements = elements.length ? elements : [elements];
        for (var index = 0; index < elements.length; index++) {
            elements[index].style.display = 'none';
        }
    }
    function displayQr() {
        var element = document.getElementById('target'),
            style = window.getComputedStyle(element),
            display = style.getPropertyValue('display')

        if (display == "none") {
            show(document.querySelectorAll('.target'));

            function show(elements) {
                elements = elements.length ? elements : [elements];
                for (var index = 0; index < elements.length; index++) {
                    elements[index].style.display = 'block';
                }
            }
        } else {
            hide(document.querySelectorAll('.target'));
        }

    }

</script>
<script type="text/javascript">
    function printpage() {
        var getQrCode = document.getElementById('target');
        var MainWindow = window.open('', '', 'height=500, width=800');

        MainWindow.document.write('<html><head><title>Print Page</title>');
        MainWindow.document.write('</head><body>');
        MainWindow.document.write(getQrCode.innerHTML);
        MainWindow.document.write('</body></html>');
        MainWindow.document.close();
        setTimeout(function () {
            MainWindow.print();
        }, 500);
        return false;
    }

    function addNewMedCard() {
        var num = @Model.medInfoList.Count;
        var medCard = '<div class="col-lg-4 col-md-4 col-sm-12 col-xs-12" style="padding-left: 0; margin-top: 15px;"><div class="thumbnail" style="height: 300px;"> <div class="form-group clearfix" style="display: block;"><div class="col-sm-12" style="margin: 10px 0px;"><h5 style="color: black;">Medical Conditions:</h5><input class="form-control text-box single-line" data-val="true" data-val-length="The field MedicalCondition must be a string with a maximum length of 50." data-val-length-max="50" id="medInfoList_'+num+'__MedicalCondition" name="medInfoList['+num+'].MedicalCondition" style="max-width: 400px;" type="text" value=""><span class="field-validation-valid text-danger" data-valmsg-for="medInfoList['+num+'].MedicalCondition" data-valmsg-replace="true"></span> </div><div class="col-sm-12"><h5 style="color: black;">Symptoms:</h5><input class="form-control text-box single-line" data-val="true" data-val-length="The field Symptoms must be a string with a maximum length of 150." data-val-length-max="150" id="medInfoList_'+num+'__Symptoms" name="medInfoList['+num+'].Symptoms" style="max-width: 400px;" type="text" value=""<span class="field-validation-valid text-danger" data-valmsg-for="medInfoList['+num+'].Symptoms" data-valmsg-replace="true"></span></div> </div> <!-- end Medical Condition  & Symptoms --><div class="form-group clearfix" id="relatedInfo"><div class="col-lg-12 col-md-12 col-sm-12" style="margin: 0px auto; text-align: center;"><h5 style="color: black;">Related Information:</h5><textarea cols="35" data-val="true" data-val-length="The field Related Information must be a string with a maximum length of 150." data-val-length-max="150" htmlattributes="{ class = form-control, style = max-width: 840px; }" id="medInfoList_'+num+'__RelatedInformation" name="medInfoList['+num+'].RelatedInformation" rows="4"></textarea><span class="field-validation-valid text-danger" data-valmsg-for="medInfoList['+num+'].RelatedInformation" data-valmsg-replace="true"></span> </div></div> <!-- Related Information --></div></div>'
        $("#Medical").prepend(medCard);
    }
</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        if (window.location.pathname.substring(0,14) == "/Profiles/Edit") {
            $('#NavBarLayout').css({ "height": "50px", "margin-bottom": "28px" })
            var button = '<ul id="navItems"><li class="lastItem" style="margin-top: 4px"><span class="glyphicon glyphicon-user" style="margin-top: 3px"></span></li></ul>'
            $('#leftNav').append(button);
            $('#userIcon').remove();
            $('.homeNavBrand').css("font-size", "40px"); //SQR
            $('#homeNavBrand').css({ "font-size": "90px", "bottom": "-29px" }); //DOT

            var body = $(window).height();
            $('#renderBody').css("height", body + 200)
        }
    </script>
}

